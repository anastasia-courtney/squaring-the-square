<?xml version="1.0" standalone="no"?><!DOCTYPE svg PUBLIC "-//W3C//DTD SVG 1.1//EN" "http://www.w3.org/Graphics/SVG/1.1/DTD/svg11.dtd"><svg version="1.1" width="1200" height="518" onload="init(evt)" viewBox="0 0 1200 518" xmlns="http://www.w3.org/2000/svg" xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:fg="http://github.com/jonhoo/inferno"><!--Flame graph stack visualization. See https://github.com/brendangregg/FlameGraph for latest version, and http://www.brendangregg.com/flamegraphs.html for examples.--><!--NOTES: --><defs><linearGradient id="background" y1="0" y2="1" x1="0" x2="0"><stop stop-color="#eeeeee" offset="5%"/><stop stop-color="#eeeeb0" offset="95%"/></linearGradient></defs><style type="text/css">
text { font-family:monospace; font-size:12px }
#title { text-anchor:middle; font-size:17px; }
#matched { text-anchor:end; }
#search { text-anchor:end; opacity:0.1; cursor:pointer; }
#search:hover, #search.show { opacity:1; }
#subtitle { text-anchor:middle; font-color:rgb(160,160,160); }
#unzoom { cursor:pointer; }
#frames > *:hover { stroke:black; stroke-width:0.5; cursor:pointer; }
.hide { display:none; }
.parent { opacity:0.5; }
</style><script type="text/ecmascript"><![CDATA[
        var nametype = 'Function:';
        var fontsize = 12;
        var fontwidth = 0.59;
        var xpad = 10;
        var inverted = false;
        var searchcolor = 'rgb(230,0,230)';
        var fluiddrawing = true;
        var truncate_text_right = false;
    ]]><![CDATA["use strict";
var details, searchbtn, unzoombtn, matchedtxt, svg, searching, frames, known_font_width;
function init(evt) {
    details = document.getElementById("details").firstChild;
    searchbtn = document.getElementById("search");
    unzoombtn = document.getElementById("unzoom");
    matchedtxt = document.getElementById("matched");
    svg = document.getElementsByTagName("svg")[0];
    frames = document.getElementById("frames");
    known_font_width = get_monospace_width(frames);
    total_samples = parseInt(frames.attributes.total_samples.value);
    searching = 0;

    // Use GET parameters to restore a flamegraph's state.
    var restore_state = function() {
        var params = get_params();
        if (params.x && params.y)
            zoom(find_group(document.querySelector('[*|x="' + params.x + '"][y="' + params.y + '"]')));
        if (params.s)
            search(params.s);
    };

    if (fluiddrawing) {
        // Make width dynamic so the SVG fits its parent's width.
        svg.removeAttribute("width");
        // Edge requires us to have a viewBox that gets updated with size changes.
        var isEdge = /Edge\/\d./i.test(navigator.userAgent);
        if (!isEdge) {
            svg.removeAttribute("viewBox");
        }
        var update_for_width_change = function() {
            if (isEdge) {
                svg.attributes.viewBox.value = "0 0 " + svg.width.baseVal.value + " " + svg.height.baseVal.value;
            }

            // Keep consistent padding on left and right of frames container.
            frames.attributes.width.value = svg.width.baseVal.value - xpad * 2;

            // Text truncation needs to be adjusted for the current width.
            update_text_for_elements(frames.children);

            // Keep search elements at a fixed distance from right edge.
            var svgWidth = svg.width.baseVal.value;
            searchbtn.attributes.x.value = svgWidth - xpad;
            matchedtxt.attributes.x.value = svgWidth - xpad;
        };
        window.addEventListener('resize', function() {
            update_for_width_change();
        });
        // This needs to be done asynchronously for Safari to work.
        setTimeout(function() {
            unzoom();
            update_for_width_change();
            restore_state();
        }, 0);
    } else {
        restore_state();
    }
}
// event listeners
window.addEventListener("click", function(e) {
    var target = find_group(e.target);
    if (target) {
        if (target.nodeName == "a") {
            if (e.ctrlKey === false) return;
            e.preventDefault();
        }
        if (target.classList.contains("parent")) unzoom();
        zoom(target);

        // set parameters for zoom state
        var el = target.querySelector("rect");
        if (el && el.attributes && el.attributes.y && el.attributes["fg:x"]) {
            var params = get_params()
            params.x = el.attributes["fg:x"].value;
            params.y = el.attributes.y.value;
            history.replaceState(null, null, parse_params(params));
        }
    }
    else if (e.target.id == "unzoom") {
        unzoom();

        // remove zoom state
        var params = get_params();
        if (params.x) delete params.x;
        if (params.y) delete params.y;
        history.replaceState(null, null, parse_params(params));
    }
    else if (e.target.id == "search") search_prompt();
}, false)
// mouse-over for info
// show
window.addEventListener("mouseover", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = nametype + " " + g_to_text(target);
}, false)
// clear
window.addEventListener("mouseout", function(e) {
    var target = find_group(e.target);
    if (target) details.nodeValue = ' ';
}, false)
// ctrl-F for search
window.addEventListener("keydown",function (e) {
    if (e.keyCode === 114 || (e.ctrlKey && e.keyCode === 70)) {
        e.preventDefault();
        search_prompt();
    }
}, false)
// functions
function get_params() {
    var params = {};
    var paramsarr = window.location.search.substr(1).split('&');
    for (var i = 0; i < paramsarr.length; ++i) {
        var tmp = paramsarr[i].split("=");
        if (!tmp[0] || !tmp[1]) continue;
        params[tmp[0]]  = decodeURIComponent(tmp[1]);
    }
    return params;
}
function parse_params(params) {
    var uri = "?";
    for (var key in params) {
        uri += key + '=' + encodeURIComponent(params[key]) + '&';
    }
    if (uri.slice(-1) == "&")
        uri = uri.substring(0, uri.length - 1);
    if (uri == '?')
        uri = window.location.href.split('?')[0];
    return uri;
}
function find_child(node, selector) {
    var children = node.querySelectorAll(selector);
    if (children.length) return children[0];
    return;
}
function find_group(node) {
    var parent = node.parentElement;
    if (!parent) return;
    if (parent.id == "frames") return node;
    return find_group(parent);
}
function orig_save(e, attr, val) {
    if (e.attributes["fg:orig_" + attr] != undefined) return;
    if (e.attributes[attr] == undefined) return;
    if (val == undefined) val = e.attributes[attr].value;
    e.setAttribute("fg:orig_" + attr, val);
}
function orig_load(e, attr) {
    if (e.attributes["fg:orig_"+attr] == undefined) return;
    e.attributes[attr].value = e.attributes["fg:orig_" + attr].value;
    e.removeAttribute("fg:orig_" + attr);
}
function g_to_text(e) {
    var text = find_child(e, "title").firstChild.nodeValue;
    return (text)
}
function g_to_func(e) {
    var func = g_to_text(e);
    // if there's any manipulation we want to do to the function
    // name before it's searched, do it here before returning.
    return (func);
}
function get_monospace_width(frames) {
    // Given the id="frames" element, return the width of text characters if
    // this is a monospace font, otherwise return 0.
    text = find_child(frames.children[0], "text");
    originalContent = text.textContent;
    text.textContent = "!";
    bangWidth = text.getComputedTextLength();
    text.textContent = "W";
    wWidth = text.getComputedTextLength();
    text.textContent = originalContent;
    if (bangWidth === wWidth) {
        return bangWidth;
    } else {
        return 0;
    }
}
function update_text_for_elements(elements) {
    // In order to render quickly in the browser, you want to do one pass of
    // reading attributes, and one pass of mutating attributes. See
    // https://web.dev/avoid-large-complex-layouts-and-layout-thrashing/ for details.

    // Fall back to inefficient calculation, if we're variable-width font.
    // TODO This should be optimized somehow too.
    if (known_font_width === 0) {
        for (var i = 0; i < elements.length; i++) {
            update_text(elements[i]);
        }
        return;
    }

    var textElemNewAttributes = [];
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var r = find_child(e, "rect");
        var t = find_child(e, "text");
        var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
        var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
        var newX = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

        // Smaller than this size won't fit anything
        if (w < 2 * known_font_width) {
            textElemNewAttributes.push([newX, ""]);
            continue;
        }

        // Fit in full text width
        if (txt.length * known_font_width < w) {
            textElemNewAttributes.push([newX, txt]);
            continue;
        }

        var substringLength = Math.floor(w / known_font_width) - 2;
        if (truncate_text_right) {
            // Truncate the right side of the text.
            textElemNewAttributes.push([newX, txt.substring(0, substringLength) + ".."]);
            continue;
        } else {
            // Truncate the left side of the text.
            textElemNewAttributes.push([newX, ".." + txt.substring(txt.length - substringLength, txt.length)]);
            continue;
        }
    }

    console.assert(textElemNewAttributes.length === elements.length, "Resize failed, please file a bug at https://github.com/jonhoo/inferno/");

    // Now that we know new textContent, set it all in one go so we don't refresh a bazillion times.
    for (var i = 0; i < elements.length; i++) {
        var e = elements[i];
        var values = textElemNewAttributes[i];
        var t = find_child(e, "text");
        t.attributes.x.value = values[0];
        t.textContent = values[1];
    }
}

function update_text(e) {
    var r = find_child(e, "rect");
    var t = find_child(e, "text");
    var w = parseFloat(r.attributes.width.value) * frames.attributes.width.value / 100 - 3;
    var txt = find_child(e, "title").textContent.replace(/\([^(]*\)$/,"");
    t.attributes.x.value = format_percent((parseFloat(r.attributes.x.value) + (100 * 3 / frames.attributes.width.value)));

    // Smaller than this size won't fit anything
    if (w < 2 * fontsize * fontwidth) {
        t.textContent = "";
        return;
    }
    t.textContent = txt;
    // Fit in full text width
    if (t.getComputedTextLength() < w)
        return;
    if (truncate_text_right) {
        // Truncate the right side of the text.
        for (var x = txt.length - 2; x > 0; x--) {
            if (t.getSubStringLength(0, x + 2) <= w) {
                t.textContent = txt.substring(0, x) + "..";
                return;
            }
        }
    } else {
        // Truncate the left side of the text.
        for (var x = 2; x < txt.length; x++) {
            if (t.getSubStringLength(x - 2, txt.length) <= w) {
                t.textContent = ".." + txt.substring(x, txt.length);
                return;
            }
        }
    }
    t.textContent = "";
}
// zoom
function zoom_reset(e) {
    if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * parseInt(e.attributes["fg:x"].value) / total_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / total_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_reset(c[i]);
    }
}
function zoom_child(e, x, zoomed_width_samples) {
    if (e.tagName == "text") {
        var parent_x = parseFloat(find_child(e.parentNode, "rect[x]").attributes.x.value);
        e.attributes.x.value = format_percent(parent_x + (100 * 3 / frames.attributes.width.value));
    } else if (e.tagName == "rect") {
        e.attributes.x.value = format_percent(100 * (parseInt(e.attributes["fg:x"].value) - x) / zoomed_width_samples);
        e.attributes.width.value = format_percent(100 * parseInt(e.attributes["fg:w"].value) / zoomed_width_samples);
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_child(c[i], x, zoomed_width_samples);
    }
}
function zoom_parent(e) {
    if (e.attributes) {
        if (e.attributes.x != undefined) {
            e.attributes.x.value = "0.0%";
        }
        if (e.attributes.width != undefined) {
            e.attributes.width.value = "100.0%";
        }
    }
    if (e.childNodes == undefined) return;
    for(var i = 0, c = e.childNodes; i < c.length; i++) {
        zoom_parent(c[i]);
    }
}
function zoom(node) {
    var attr = find_child(node, "rect").attributes;
    var width = parseInt(attr["fg:w"].value);
    var xmin = parseInt(attr["fg:x"].value);
    var xmax = xmin + width;
    var ymin = parseFloat(attr.y.value);
    unzoombtn.classList.remove("hide");
    var el = frames.children;
    var to_update_text = [];
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        var a = find_child(e, "rect").attributes;
        var ex = parseInt(a["fg:x"].value);
        var ew = parseInt(a["fg:w"].value);
        // Is it an ancestor
        if (!inverted) {
            var upstack = parseFloat(a.y.value) > ymin;
        } else {
            var upstack = parseFloat(a.y.value) < ymin;
        }
        if (upstack) {
            // Direct ancestor
            if (ex <= xmin && (ex+ew) >= xmax) {
                e.classList.add("parent");
                zoom_parent(e);
                to_update_text.push(e);
            }
            // not in current path
            else
                e.classList.add("hide");
        }
        // Children maybe
        else {
            // no common path
            if (ex < xmin || ex >= xmax) {
                e.classList.add("hide");
            }
            else {
                zoom_child(e, xmin, width);
                to_update_text.push(e);
            }
        }
    }
    update_text_for_elements(to_update_text);
}
function unzoom() {
    unzoombtn.classList.add("hide");
    var el = frames.children;
    for(var i = 0; i < el.length; i++) {
        el[i].classList.remove("parent");
        el[i].classList.remove("hide");
        zoom_reset(el[i]);
    }
    update_text_for_elements(el);
}
// search
function reset_search() {
    var el = document.querySelectorAll("#frames rect");
    for (var i = 0; i < el.length; i++) {
        orig_load(el[i], "fill")
    }
    var params = get_params();
    delete params.s;
    history.replaceState(null, null, parse_params(params));
}
function search_prompt() {
    if (!searching) {
        var term = prompt("Enter a search term (regexp " +
            "allowed, eg: ^ext4_)", "");
        if (term != null) {
            search(term)
        }
    } else {
        reset_search();
        searching = 0;
        searchbtn.classList.remove("show");
        searchbtn.firstChild.nodeValue = "Search"
        matchedtxt.classList.add("hide");
        matchedtxt.firstChild.nodeValue = ""
    }
}
function search(term) {
    var re = new RegExp(term);
    var el = frames.children;
    var matches = new Object();
    var maxwidth = 0;
    for (var i = 0; i < el.length; i++) {
        var e = el[i];
        // Skip over frames which are either not visible, or below the zoomed-to frame
        if (e.classList.contains("hide") || e.classList.contains("parent")) {
            continue;
        }
        var func = g_to_func(e);
        var rect = find_child(e, "rect");
        if (func == null || rect == null)
            continue;
        // Save max width. Only works as we have a root frame
        var w = parseInt(rect.attributes["fg:w"].value);
        if (w > maxwidth)
            maxwidth = w;
        if (func.match(re)) {
            // highlight
            var x = parseInt(rect.attributes["fg:x"].value);
            orig_save(rect, "fill");
            rect.attributes.fill.value = searchcolor;
            // remember matches
            if (matches[x] == undefined) {
                matches[x] = w;
            } else {
                if (w > matches[x]) {
                    // overwrite with parent
                    matches[x] = w;
                }
            }
            searching = 1;
        }
    }
    if (!searching)
        return;
    var params = get_params();
    params.s = term;
    history.replaceState(null, null, parse_params(params));

    searchbtn.classList.add("show");
    searchbtn.firstChild.nodeValue = "Reset Search";
    // calculate percent matched, excluding vertical overlap
    var count = 0;
    var lastx = -1;
    var lastw = 0;
    var keys = Array();
    for (k in matches) {
        if (matches.hasOwnProperty(k))
            keys.push(k);
    }
    // sort the matched frames by their x location
    // ascending, then width descending
    keys.sort(function(a, b){
        return a - b;
    });
    // Step through frames saving only the biggest bottom-up frames
    // thanks to the sort order. This relies on the tree property
    // where children are always smaller than their parents.
    for (var k in keys) {
        var x = parseInt(keys[k]);
        var w = matches[keys[k]];
        if (x >= lastx + lastw) {
            count += w;
            lastx = x;
            lastw = w;
        }
    }
    // display matched percent
    matchedtxt.classList.remove("hide");
    var pct = 100 * count / maxwidth;
    if (pct != 100) pct = pct.toFixed(1);
    matchedtxt.firstChild.nodeValue = "Matched: " + pct + "%";
}
function format_percent(n) {
    return n.toFixed(4) + "%";
}
]]></script><rect x="0" y="0" width="100%" height="518" fill="url(#background)"/><text id="title" fill="rgb(0,0,0)" x="50.0000%" y="24.00">Flame Graph</text><text id="details" fill="rgb(0,0,0)" x="10" y="501.00"> </text><text id="unzoom" class="hide" fill="rgb(0,0,0)" x="10" y="24.00">Reset Zoom</text><text id="search" fill="rgb(0,0,0)" x="1190" y="24.00">Search</text><text id="matched" fill="rgb(0,0,0)" x="1190" y="501.00"> </text><svg id="frames" x="10" width="1180" total_samples="9892"><g><title>Squaring-The-Square`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="0.0101%" y="277" width="0.0101%" height="15" fill="rgb(227,0,7)" fg:x="1" fg:w="1"/><text x="0.2601%" y="287.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (3 samples, 0.03%)</title><rect x="0.0708%" y="261" width="0.0303%" height="15" fill="rgb(217,0,24)" fg:x="7" fg:w="3"/><text x="0.3208%" y="271.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="0.1011%" y="261" width="0.0202%" height="15" fill="rgb(221,193,54)" fg:x="10" fg:w="2"/><text x="0.3511%" y="271.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (3 samples, 0.03%)</title><rect x="0.1213%" y="261" width="0.0303%" height="15" fill="rgb(248,212,6)" fg:x="12" fg:w="3"/><text x="0.3713%" y="271.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (2 samples, 0.02%)</title><rect x="0.1516%" y="261" width="0.0202%" height="15" fill="rgb(208,68,35)" fg:x="15" fg:w="2"/><text x="0.4016%" y="271.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (17 samples, 0.17%)</title><rect x="0.6672%" y="245" width="0.1719%" height="15" fill="rgb(232,128,0)" fg:x="66" fg:w="17"/><text x="0.9172%" y="255.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (2 samples, 0.02%)</title><rect x="0.8391%" y="245" width="0.0202%" height="15" fill="rgb(207,160,47)" fg:x="83" fg:w="2"/><text x="1.0891%" y="255.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (6 samples, 0.06%)</title><rect x="0.8593%" y="245" width="0.0607%" height="15" fill="rgb(228,23,34)" fg:x="85" fg:w="6"/><text x="1.1093%" y="255.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (2 samples, 0.02%)</title><rect x="0.9199%" y="245" width="0.0202%" height="15" fill="rgb(218,30,26)" fg:x="91" fg:w="2"/><text x="1.1699%" y="255.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (7 samples, 0.07%)</title><rect x="0.9402%" y="245" width="0.0708%" height="15" fill="rgb(220,122,19)" fg:x="93" fg:w="7"/><text x="1.1902%" y="255.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (54 samples, 0.55%)</title><rect x="2.8609%" y="229" width="0.5459%" height="15" fill="rgb(250,228,42)" fg:x="283" fg:w="54"/><text x="3.1109%" y="239.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (25 samples, 0.25%)</title><rect x="3.4068%" y="229" width="0.2527%" height="15" fill="rgb(240,193,28)" fg:x="337" fg:w="25"/><text x="3.6568%" y="239.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (7 samples, 0.07%)</title><rect x="3.6595%" y="229" width="0.0708%" height="15" fill="rgb(216,20,37)" fg:x="362" fg:w="7"/><text x="3.9095%" y="239.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (5 samples, 0.05%)</title><rect x="3.7303%" y="229" width="0.0505%" height="15" fill="rgb(206,188,39)" fg:x="369" fg:w="5"/><text x="3.9803%" y="239.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memcpy (7 samples, 0.07%)</title><rect x="3.7808%" y="229" width="0.0708%" height="15" fill="rgb(217,207,13)" fg:x="374" fg:w="7"/><text x="4.0308%" y="239.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (7 samples, 0.07%)</title><rect x="3.8516%" y="229" width="0.0708%" height="15" fill="rgb(231,73,38)" fg:x="381" fg:w="7"/><text x="4.1016%" y="239.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (101 samples, 1.02%)</title><rect x="7.9761%" y="213" width="1.0210%" height="15" fill="rgb(225,20,46)" fg:x="789" fg:w="101"/><text x="8.2261%" y="223.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (24 samples, 0.24%)</title><rect x="8.9972%" y="213" width="0.2426%" height="15" fill="rgb(210,31,41)" fg:x="890" fg:w="24"/><text x="9.2472%" y="223.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (11 samples, 0.11%)</title><rect x="9.2398%" y="213" width="0.1112%" height="15" fill="rgb(221,200,47)" fg:x="914" fg:w="11"/><text x="9.4898%" y="223.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (17 samples, 0.17%)</title><rect x="9.3510%" y="213" width="0.1719%" height="15" fill="rgb(226,26,5)" fg:x="925" fg:w="17"/><text x="9.6010%" y="223.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memcpy (9 samples, 0.09%)</title><rect x="9.5228%" y="213" width="0.0910%" height="15" fill="rgb(249,33,26)" fg:x="942" fg:w="9"/><text x="9.7728%" y="223.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (24 samples, 0.24%)</title><rect x="9.6138%" y="213" width="0.2426%" height="15" fill="rgb(235,183,28)" fg:x="951" fg:w="24"/><text x="9.8638%" y="223.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (92 samples, 0.93%)</title><rect x="13.6474%" y="197" width="0.9300%" height="15" fill="rgb(221,5,38)" fg:x="1350" fg:w="92"/><text x="13.8974%" y="207.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (31 samples, 0.31%)</title><rect x="14.5774%" y="197" width="0.3134%" height="15" fill="rgb(247,18,42)" fg:x="1442" fg:w="31"/><text x="14.8274%" y="207.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (3 samples, 0.03%)</title><rect x="14.8908%" y="197" width="0.0303%" height="15" fill="rgb(241,131,45)" fg:x="1473" fg:w="3"/><text x="15.1408%" y="207.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (4 samples, 0.04%)</title><rect x="14.9211%" y="197" width="0.0404%" height="15" fill="rgb(249,31,29)" fg:x="1476" fg:w="4"/><text x="15.1711%" y="207.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memcpy (8 samples, 0.08%)</title><rect x="14.9616%" y="197" width="0.0809%" height="15" fill="rgb(225,111,53)" fg:x="1480" fg:w="8"/><text x="15.2116%" y="207.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (8 samples, 0.08%)</title><rect x="15.0425%" y="197" width="0.0809%" height="15" fill="rgb(238,160,17)" fg:x="1488" fg:w="8"/><text x="15.2925%" y="207.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (52 samples, 0.53%)</title><rect x="17.2159%" y="181" width="0.5257%" height="15" fill="rgb(214,148,48)" fg:x="1703" fg:w="52"/><text x="17.4659%" y="191.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="17.7416%" y="181" width="0.0607%" height="15" fill="rgb(232,36,49)" fg:x="1755" fg:w="6"/><text x="17.9916%" y="191.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (2 samples, 0.02%)</title><rect x="17.8023%" y="181" width="0.0202%" height="15" fill="rgb(209,103,24)" fg:x="1761" fg:w="2"/><text x="18.0523%" y="191.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (3 samples, 0.03%)</title><rect x="17.8225%" y="181" width="0.0303%" height="15" fill="rgb(229,88,8)" fg:x="1763" fg:w="3"/><text x="18.0725%" y="191.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memcpy (3 samples, 0.03%)</title><rect x="17.8528%" y="181" width="0.0303%" height="15" fill="rgb(213,181,19)" fg:x="1766" fg:w="3"/><text x="18.1028%" y="191.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (2 samples, 0.02%)</title><rect x="17.8831%" y="181" width="0.0202%" height="15" fill="rgb(254,191,54)" fg:x="1769" fg:w="2"/><text x="18.1331%" y="191.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (9 samples, 0.09%)</title><rect x="18.4189%" y="165" width="0.0910%" height="15" fill="rgb(241,83,37)" fg:x="1822" fg:w="9"/><text x="18.6689%" y="175.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="18.5099%" y="165" width="0.0607%" height="15" fill="rgb(233,36,39)" fg:x="1831" fg:w="6"/><text x="18.7599%" y="175.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="18.5706%" y="165" width="0.0101%" height="15" fill="rgb(226,3,54)" fg:x="1837" fg:w="1"/><text x="18.8206%" y="175.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memcpy (1 samples, 0.01%)</title><rect x="18.5807%" y="165" width="0.0101%" height="15" fill="rgb(245,192,40)" fg:x="1838" fg:w="1"/><text x="18.8307%" y="175.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (4 samples, 0.04%)</title><rect x="18.5908%" y="165" width="0.0404%" height="15" fill="rgb(238,167,29)" fg:x="1839" fg:w="4"/><text x="18.8408%" y="175.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (8 samples, 0.08%)</title><rect x="19.0154%" y="149" width="0.0809%" height="15" fill="rgb(232,182,51)" fg:x="1881" fg:w="8"/><text x="19.2654%" y="159.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (6 samples, 0.06%)</title><rect x="19.0962%" y="149" width="0.0607%" height="15" fill="rgb(231,60,39)" fg:x="1889" fg:w="6"/><text x="19.3462%" y="159.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$free (1 samples, 0.01%)</title><rect x="19.1569%" y="149" width="0.0101%" height="15" fill="rgb(208,69,12)" fg:x="1895" fg:w="1"/><text x="19.4069%" y="159.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$malloc (1 samples, 0.01%)</title><rect x="19.1670%" y="149" width="0.0101%" height="15" fill="rgb(235,93,37)" fg:x="1896" fg:w="1"/><text x="19.4170%" y="159.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (2 samples, 0.02%)</title><rect x="19.1771%" y="149" width="0.0202%" height="15" fill="rgb(213,116,39)" fg:x="1897" fg:w="2"/><text x="19.4271%" y="159.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (4 samples, 0.04%)</title><rect x="19.4298%" y="133" width="0.0404%" height="15" fill="rgb(222,207,29)" fg:x="1922" fg:w="4"/><text x="19.6798%" y="143.50"></text></g><g><title>Squaring-The-Square`&lt;hashbrown::raw::RawTable&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="19.4703%" y="133" width="0.0101%" height="15" fill="rgb(206,96,30)" fg:x="1926" fg:w="1"/><text x="19.7203%" y="143.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$memmove (1 samples, 0.01%)</title><rect x="19.4804%" y="133" width="0.0101%" height="15" fill="rgb(218,138,4)" fg:x="1927" fg:w="1"/><text x="19.7304%" y="143.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="19.6421%" y="117" width="0.0101%" height="15" fill="rgb(250,191,14)" fg:x="1943" fg:w="1"/><text x="19.8921%" y="127.50"></text></g><g><title>Squaring-The-Square`&lt;alloc::vec::Vec&lt;T,A&gt; as core::clone::Clone&gt;::clone (1 samples, 0.01%)</title><rect x="19.6725%" y="101" width="0.0101%" height="15" fill="rgb(239,60,40)" fg:x="1946" fg:w="1"/><text x="19.9225%" y="111.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (1 samples, 0.01%)</title><rect x="19.7230%" y="85" width="0.0101%" height="15" fill="rgb(206,27,48)" fg:x="1951" fg:w="1"/><text x="19.9730%" y="95.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (1 samples, 0.01%)</title><rect x="19.7230%" y="69" width="0.0101%" height="15" fill="rgb(225,35,8)" fg:x="1951" fg:w="1"/><text x="19.9730%" y="79.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="19.7230%" y="53" width="0.0101%" height="15" fill="rgb(250,213,24)" fg:x="1951" fg:w="1"/><text x="19.9730%" y="63.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (1 samples, 0.01%)</title><rect x="19.7331%" y="85" width="0.0101%" height="15" fill="rgb(247,123,22)" fg:x="1952" fg:w="1"/><text x="19.9831%" y="95.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (8 samples, 0.08%)</title><rect x="19.6826%" y="101" width="0.0809%" height="15" fill="rgb(231,138,38)" fg:x="1947" fg:w="8"/><text x="19.9326%" y="111.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="19.7432%" y="85" width="0.0202%" height="15" fill="rgb(231,145,46)" fg:x="1953" fg:w="2"/><text x="19.9932%" y="95.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (1 samples, 0.01%)</title><rect x="19.7634%" y="101" width="0.0101%" height="15" fill="rgb(251,118,11)" fg:x="1955" fg:w="1"/><text x="20.0134%" y="111.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (1 samples, 0.01%)</title><rect x="19.7736%" y="101" width="0.0101%" height="15" fill="rgb(217,147,25)" fg:x="1956" fg:w="1"/><text x="20.0236%" y="111.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="19.7736%" y="85" width="0.0101%" height="15" fill="rgb(247,81,37)" fg:x="1956" fg:w="1"/><text x="20.0236%" y="95.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="19.7837%" y="101" width="0.0303%" height="15" fill="rgb(209,12,38)" fg:x="1957" fg:w="3"/><text x="20.0337%" y="111.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (4 samples, 0.04%)</title><rect x="19.8140%" y="101" width="0.0404%" height="15" fill="rgb(227,1,9)" fg:x="1960" fg:w="4"/><text x="20.0640%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="19.8544%" y="101" width="0.0303%" height="15" fill="rgb(248,47,43)" fg:x="1964" fg:w="3"/><text x="20.1044%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="19.8848%" y="101" width="0.0101%" height="15" fill="rgb(221,10,30)" fg:x="1967" fg:w="1"/><text x="20.1348%" y="111.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (26 samples, 0.26%)</title><rect x="19.6522%" y="117" width="0.2628%" height="15" fill="rgb(210,229,1)" fg:x="1944" fg:w="26"/><text x="19.9022%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="19.8949%" y="101" width="0.0202%" height="15" fill="rgb(222,148,37)" fg:x="1968" fg:w="2"/><text x="20.1449%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="19.9252%" y="69" width="0.0101%" height="15" fill="rgb(234,67,33)" fg:x="1971" fg:w="1"/><text x="20.1752%" y="79.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (3 samples, 0.03%)</title><rect x="19.9252%" y="101" width="0.0303%" height="15" fill="rgb(247,98,35)" fg:x="1971" fg:w="3"/><text x="20.1752%" y="111.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (3 samples, 0.03%)</title><rect x="19.9252%" y="85" width="0.0303%" height="15" fill="rgb(247,138,52)" fg:x="1971" fg:w="3"/><text x="20.1752%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="19.9353%" y="69" width="0.0202%" height="15" fill="rgb(213,79,30)" fg:x="1972" fg:w="2"/><text x="20.1853%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="19.9353%" y="53" width="0.0202%" height="15" fill="rgb(246,177,23)" fg:x="1972" fg:w="2"/><text x="20.1853%" y="63.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="19.9454%" y="37" width="0.0101%" height="15" fill="rgb(230,62,27)" fg:x="1973" fg:w="1"/><text x="20.1954%" y="47.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (6 samples, 0.06%)</title><rect x="19.9151%" y="117" width="0.0607%" height="15" fill="rgb(216,154,8)" fg:x="1970" fg:w="6"/><text x="20.1651%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="19.9555%" y="101" width="0.0202%" height="15" fill="rgb(244,35,45)" fg:x="1974" fg:w="2"/><text x="20.2055%" y="111.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (3 samples, 0.03%)</title><rect x="19.9757%" y="117" width="0.0303%" height="15" fill="rgb(251,115,12)" fg:x="1976" fg:w="3"/><text x="20.2257%" y="127.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (1 samples, 0.01%)</title><rect x="20.0061%" y="117" width="0.0101%" height="15" fill="rgb(240,54,50)" fg:x="1979" fg:w="1"/><text x="20.2561%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="20.0061%" y="101" width="0.0101%" height="15" fill="rgb(233,84,52)" fg:x="1979" fg:w="1"/><text x="20.2561%" y="111.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="20.0061%" y="85" width="0.0101%" height="15" fill="rgb(207,117,47)" fg:x="1979" fg:w="1"/><text x="20.2561%" y="95.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (1 samples, 0.01%)</title><rect x="20.0162%" y="117" width="0.0101%" height="15" fill="rgb(249,43,39)" fg:x="1980" fg:w="1"/><text x="20.2662%" y="127.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (7 samples, 0.07%)</title><rect x="20.0263%" y="117" width="0.0708%" height="15" fill="rgb(209,38,44)" fg:x="1981" fg:w="7"/><text x="20.2763%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (37 samples, 0.37%)</title><rect x="20.0970%" y="117" width="0.3740%" height="15" fill="rgb(236,212,23)" fg:x="1988" fg:w="37"/><text x="20.3470%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="20.4711%" y="117" width="0.0101%" height="15" fill="rgb(242,79,21)" fg:x="2025" fg:w="1"/><text x="20.7211%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (1 samples, 0.01%)</title><rect x="20.4812%" y="117" width="0.0101%" height="15" fill="rgb(211,96,35)" fg:x="2026" fg:w="1"/><text x="20.7312%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (1 samples, 0.01%)</title><rect x="20.4913%" y="117" width="0.0101%" height="15" fill="rgb(253,215,40)" fg:x="2027" fg:w="1"/><text x="20.7413%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="20.5014%" y="117" width="0.0202%" height="15" fill="rgb(211,81,21)" fg:x="2028" fg:w="2"/><text x="20.7514%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="20.5216%" y="117" width="0.0101%" height="15" fill="rgb(208,190,38)" fg:x="2030" fg:w="1"/><text x="20.7716%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="20.5317%" y="117" width="0.0303%" height="15" fill="rgb(235,213,38)" fg:x="2031" fg:w="3"/><text x="20.7817%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="20.5621%" y="117" width="0.0101%" height="15" fill="rgb(237,122,38)" fg:x="2034" fg:w="1"/><text x="20.8121%" y="127.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (108 samples, 1.09%)</title><rect x="19.4905%" y="133" width="1.0918%" height="15" fill="rgb(244,218,35)" fg:x="1928" fg:w="108"/><text x="19.7405%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="20.5722%" y="117" width="0.0101%" height="15" fill="rgb(240,68,47)" fg:x="2035" fg:w="1"/><text x="20.8222%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="20.6025%" y="85" width="0.0101%" height="15" fill="rgb(210,16,53)" fg:x="2038" fg:w="1"/><text x="20.8525%" y="95.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (2 samples, 0.02%)</title><rect x="20.6025%" y="117" width="0.0202%" height="15" fill="rgb(235,124,12)" fg:x="2038" fg:w="2"/><text x="20.8525%" y="127.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (2 samples, 0.02%)</title><rect x="20.6025%" y="101" width="0.0202%" height="15" fill="rgb(224,169,11)" fg:x="2038" fg:w="2"/><text x="20.8525%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="20.6126%" y="85" width="0.0101%" height="15" fill="rgb(250,166,2)" fg:x="2039" fg:w="1"/><text x="20.8626%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="20.6126%" y="69" width="0.0101%" height="15" fill="rgb(242,216,29)" fg:x="2039" fg:w="1"/><text x="20.8626%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="20.6126%" y="53" width="0.0101%" height="15" fill="rgb(230,116,27)" fg:x="2039" fg:w="1"/><text x="20.8626%" y="63.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (6 samples, 0.06%)</title><rect x="20.5823%" y="133" width="0.0607%" height="15" fill="rgb(228,99,48)" fg:x="2036" fg:w="6"/><text x="20.8323%" y="143.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="20.6227%" y="117" width="0.0202%" height="15" fill="rgb(253,11,6)" fg:x="2040" fg:w="2"/><text x="20.8727%" y="127.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (2 samples, 0.02%)</title><rect x="20.6429%" y="133" width="0.0202%" height="15" fill="rgb(247,143,39)" fg:x="2042" fg:w="2"/><text x="20.8929%" y="143.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (3 samples, 0.03%)</title><rect x="20.6632%" y="133" width="0.0303%" height="15" fill="rgb(236,97,10)" fg:x="2044" fg:w="3"/><text x="20.9132%" y="143.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="20.6834%" y="117" width="0.0101%" height="15" fill="rgb(233,208,19)" fg:x="2046" fg:w="1"/><text x="20.9334%" y="127.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="20.6834%" y="101" width="0.0101%" height="15" fill="rgb(216,164,2)" fg:x="2046" fg:w="1"/><text x="20.9334%" y="111.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (1 samples, 0.01%)</title><rect x="20.6935%" y="133" width="0.0101%" height="15" fill="rgb(220,129,5)" fg:x="2047" fg:w="1"/><text x="20.9435%" y="143.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (9 samples, 0.09%)</title><rect x="20.7036%" y="133" width="0.0910%" height="15" fill="rgb(242,17,10)" fg:x="2048" fg:w="9"/><text x="20.9536%" y="143.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (50 samples, 0.51%)</title><rect x="20.7946%" y="133" width="0.5055%" height="15" fill="rgb(242,107,0)" fg:x="2057" fg:w="50"/><text x="21.0446%" y="143.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="21.3000%" y="133" width="0.0101%" height="15" fill="rgb(251,28,31)" fg:x="2107" fg:w="1"/><text x="21.5500%" y="143.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (3 samples, 0.03%)</title><rect x="21.3101%" y="133" width="0.0303%" height="15" fill="rgb(233,223,10)" fg:x="2108" fg:w="3"/><text x="21.5601%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="21.3405%" y="133" width="0.0303%" height="15" fill="rgb(215,21,27)" fg:x="2111" fg:w="3"/><text x="21.5905%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (7 samples, 0.07%)</title><rect x="21.3708%" y="133" width="0.0708%" height="15" fill="rgb(232,23,21)" fg:x="2114" fg:w="7"/><text x="21.6208%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`free (1 samples, 0.01%)</title><rect x="21.4416%" y="133" width="0.0101%" height="15" fill="rgb(244,5,23)" fg:x="2121" fg:w="1"/><text x="21.6916%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="21.4517%" y="133" width="0.0202%" height="15" fill="rgb(226,81,46)" fg:x="2122" fg:w="2"/><text x="21.7017%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.07%)</title><rect x="21.4719%" y="133" width="0.0708%" height="15" fill="rgb(247,70,30)" fg:x="2124" fg:w="7"/><text x="21.7219%" y="143.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (238 samples, 2.41%)</title><rect x="19.1973%" y="149" width="2.4060%" height="15" fill="rgb(212,68,19)" fg:x="1899" fg:w="238"/><text x="19.4473%" y="159.50">Sq..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.06%)</title><rect x="21.5427%" y="133" width="0.0607%" height="15" fill="rgb(240,187,13)" fg:x="2131" fg:w="6"/><text x="21.7927%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (1 samples, 0.01%)</title><rect x="21.6640%" y="101" width="0.0101%" height="15" fill="rgb(223,113,26)" fg:x="2143" fg:w="1"/><text x="21.9140%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (1 samples, 0.01%)</title><rect x="21.6842%" y="69" width="0.0101%" height="15" fill="rgb(206,192,2)" fg:x="2145" fg:w="1"/><text x="21.9342%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (1 samples, 0.01%)</title><rect x="21.6943%" y="69" width="0.0101%" height="15" fill="rgb(241,108,4)" fg:x="2146" fg:w="1"/><text x="21.9443%" y="79.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="21.7044%" y="53" width="0.0202%" height="15" fill="rgb(247,173,49)" fg:x="2147" fg:w="2"/><text x="21.9544%" y="63.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (7 samples, 0.07%)</title><rect x="21.6640%" y="133" width="0.0708%" height="15" fill="rgb(224,114,35)" fg:x="2143" fg:w="7"/><text x="21.9140%" y="143.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (7 samples, 0.07%)</title><rect x="21.6640%" y="117" width="0.0708%" height="15" fill="rgb(245,159,27)" fg:x="2143" fg:w="7"/><text x="21.9140%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.06%)</title><rect x="21.6741%" y="101" width="0.0607%" height="15" fill="rgb(245,172,44)" fg:x="2144" fg:w="6"/><text x="21.9241%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (6 samples, 0.06%)</title><rect x="21.6741%" y="85" width="0.0607%" height="15" fill="rgb(236,23,11)" fg:x="2144" fg:w="6"/><text x="21.9241%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="21.7044%" y="69" width="0.0303%" height="15" fill="rgb(205,117,38)" fg:x="2147" fg:w="3"/><text x="21.9544%" y="79.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="21.7246%" y="53" width="0.0101%" height="15" fill="rgb(237,72,25)" fg:x="2149" fg:w="1"/><text x="21.9746%" y="63.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (16 samples, 0.16%)</title><rect x="21.6033%" y="149" width="0.1617%" height="15" fill="rgb(244,70,9)" fg:x="2137" fg:w="16"/><text x="21.8533%" y="159.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="21.7347%" y="133" width="0.0303%" height="15" fill="rgb(217,125,39)" fg:x="2150" fg:w="3"/><text x="21.9847%" y="143.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (3 samples, 0.03%)</title><rect x="21.7651%" y="149" width="0.0303%" height="15" fill="rgb(235,36,10)" fg:x="2153" fg:w="3"/><text x="22.0151%" y="159.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (16 samples, 0.16%)</title><rect x="21.7954%" y="149" width="0.1617%" height="15" fill="rgb(251,123,47)" fg:x="2156" fg:w="16"/><text x="22.0454%" y="159.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (75 samples, 0.76%)</title><rect x="21.9571%" y="149" width="0.7582%" height="15" fill="rgb(221,13,13)" fg:x="2172" fg:w="75"/><text x="22.2071%" y="159.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (8 samples, 0.08%)</title><rect x="22.7153%" y="149" width="0.0809%" height="15" fill="rgb(238,131,9)" fg:x="2247" fg:w="8"/><text x="22.9653%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="22.7962%" y="149" width="0.0101%" height="15" fill="rgb(211,50,8)" fg:x="2255" fg:w="1"/><text x="23.0462%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (3 samples, 0.03%)</title><rect x="22.8063%" y="149" width="0.0303%" height="15" fill="rgb(245,182,24)" fg:x="2256" fg:w="3"/><text x="23.0563%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (8 samples, 0.08%)</title><rect x="22.8366%" y="149" width="0.0809%" height="15" fill="rgb(242,14,37)" fg:x="2259" fg:w="8"/><text x="23.0866%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`free (2 samples, 0.02%)</title><rect x="22.9175%" y="149" width="0.0202%" height="15" fill="rgb(246,228,12)" fg:x="2267" fg:w="2"/><text x="23.1675%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.06%)</title><rect x="22.9377%" y="149" width="0.0607%" height="15" fill="rgb(213,55,15)" fg:x="2269" fg:w="6"/><text x="23.1877%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (13 samples, 0.13%)</title><rect x="22.9984%" y="149" width="0.1314%" height="15" fill="rgb(209,9,3)" fg:x="2275" fg:w="13"/><text x="23.2484%" y="159.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (451 samples, 4.56%)</title><rect x="18.6312%" y="165" width="4.5592%" height="15" fill="rgb(230,59,30)" fg:x="1843" fg:w="451"/><text x="18.8812%" y="175.50">Squar..</text></g><g><title>libsystem_platform.dylib`_platform_memset (6 samples, 0.06%)</title><rect x="23.1298%" y="149" width="0.0607%" height="15" fill="rgb(209,121,21)" fg:x="2288" fg:w="6"/><text x="23.3798%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (3 samples, 0.03%)</title><rect x="23.2410%" y="85" width="0.0303%" height="15" fill="rgb(220,109,13)" fg:x="2299" fg:w="3"/><text x="23.4910%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (4 samples, 0.04%)</title><rect x="23.2713%" y="85" width="0.0404%" height="15" fill="rgb(232,18,1)" fg:x="2302" fg:w="4"/><text x="23.5213%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="23.3219%" y="69" width="0.0303%" height="15" fill="rgb(215,41,42)" fg:x="2307" fg:w="3"/><text x="23.5719%" y="79.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (14 samples, 0.14%)</title><rect x="23.2208%" y="149" width="0.1415%" height="15" fill="rgb(224,123,36)" fg:x="2297" fg:w="14"/><text x="23.4708%" y="159.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (14 samples, 0.14%)</title><rect x="23.2208%" y="133" width="0.1415%" height="15" fill="rgb(240,125,3)" fg:x="2297" fg:w="14"/><text x="23.4708%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`realloc (14 samples, 0.14%)</title><rect x="23.2208%" y="117" width="0.1415%" height="15" fill="rgb(205,98,50)" fg:x="2297" fg:w="14"/><text x="23.4708%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (13 samples, 0.13%)</title><rect x="23.2309%" y="101" width="0.1314%" height="15" fill="rgb(205,185,37)" fg:x="2298" fg:w="13"/><text x="23.4809%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.05%)</title><rect x="23.3118%" y="85" width="0.0505%" height="15" fill="rgb(238,207,15)" fg:x="2306" fg:w="5"/><text x="23.5618%" y="95.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="23.3522%" y="69" width="0.0101%" height="15" fill="rgb(213,199,42)" fg:x="2310" fg:w="1"/><text x="23.6022%" y="79.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (20 samples, 0.20%)</title><rect x="23.1905%" y="165" width="0.2022%" height="15" fill="rgb(235,201,11)" fg:x="2294" fg:w="20"/><text x="23.4405%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="23.3623%" y="149" width="0.0303%" height="15" fill="rgb(207,46,11)" fg:x="2311" fg:w="3"/><text x="23.6123%" y="159.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (7 samples, 0.07%)</title><rect x="23.3926%" y="165" width="0.0708%" height="15" fill="rgb(241,35,35)" fg:x="2314" fg:w="7"/><text x="23.6426%" y="175.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (8 samples, 0.08%)</title><rect x="23.4634%" y="165" width="0.0809%" height="15" fill="rgb(243,32,47)" fg:x="2321" fg:w="8"/><text x="23.7134%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="23.5241%" y="149" width="0.0202%" height="15" fill="rgb(247,202,23)" fg:x="2327" fg:w="2"/><text x="23.7741%" y="159.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="23.5443%" y="165" width="0.0101%" height="15" fill="rgb(219,102,11)" fg:x="2329" fg:w="1"/><text x="23.7943%" y="175.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (21 samples, 0.21%)</title><rect x="23.5544%" y="165" width="0.2123%" height="15" fill="rgb(243,110,44)" fg:x="2330" fg:w="21"/><text x="23.8044%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (114 samples, 1.15%)</title><rect x="23.7667%" y="165" width="1.1524%" height="15" fill="rgb(222,74,54)" fg:x="2351" fg:w="114"/><text x="24.0167%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (3 samples, 0.03%)</title><rect x="24.9191%" y="165" width="0.0303%" height="15" fill="rgb(216,99,12)" fg:x="2465" fg:w="3"/><text x="25.1691%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (9 samples, 0.09%)</title><rect x="24.9495%" y="165" width="0.0910%" height="15" fill="rgb(226,22,26)" fg:x="2468" fg:w="9"/><text x="25.1995%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="25.0404%" y="165" width="0.0101%" height="15" fill="rgb(217,163,10)" fg:x="2477" fg:w="1"/><text x="25.2904%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.07%)</title><rect x="25.0505%" y="165" width="0.0708%" height="15" fill="rgb(213,25,53)" fg:x="2478" fg:w="7"/><text x="25.3005%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (6 samples, 0.06%)</title><rect x="25.1213%" y="165" width="0.0607%" height="15" fill="rgb(252,105,26)" fg:x="2485" fg:w="6"/><text x="25.3713%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`free (3 samples, 0.03%)</title><rect x="25.1820%" y="165" width="0.0303%" height="15" fill="rgb(220,39,43)" fg:x="2491" fg:w="3"/><text x="25.4320%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (13 samples, 0.13%)</title><rect x="25.2123%" y="165" width="0.1314%" height="15" fill="rgb(229,68,48)" fg:x="2494" fg:w="13"/><text x="25.4623%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (20 samples, 0.20%)</title><rect x="25.3437%" y="165" width="0.2022%" height="15" fill="rgb(252,8,32)" fg:x="2507" fg:w="20"/><text x="25.5937%" y="175.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (766 samples, 7.74%)</title><rect x="17.9034%" y="181" width="7.7436%" height="15" fill="rgb(223,20,43)" fg:x="1771" fg:w="766"/><text x="18.1534%" y="191.50">Squaring-Th..</text></g><g><title>libsystem_platform.dylib`_platform_memset (10 samples, 0.10%)</title><rect x="25.5459%" y="165" width="0.1011%" height="15" fill="rgb(229,81,49)" fg:x="2527" fg:w="10"/><text x="25.7959%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="25.7986%" y="101" width="0.0202%" height="15" fill="rgb(236,28,36)" fg:x="2552" fg:w="2"/><text x="26.0486%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (3 samples, 0.03%)</title><rect x="25.8188%" y="101" width="0.0303%" height="15" fill="rgb(249,185,26)" fg:x="2554" fg:w="3"/><text x="26.0688%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="25.8694%" y="85" width="0.0101%" height="15" fill="rgb(249,174,33)" fg:x="2559" fg:w="1"/><text x="26.1194%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (5 samples, 0.05%)</title><rect x="25.8492%" y="101" width="0.0505%" height="15" fill="rgb(233,201,37)" fg:x="2557" fg:w="5"/><text x="26.0992%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="25.8795%" y="85" width="0.0202%" height="15" fill="rgb(221,78,26)" fg:x="2560" fg:w="2"/><text x="26.1295%" y="95.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (12 samples, 0.12%)</title><rect x="25.7885%" y="117" width="0.1213%" height="15" fill="rgb(250,127,30)" fg:x="2551" fg:w="12"/><text x="26.0385%" y="127.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (1 samples, 0.01%)</title><rect x="25.8997%" y="101" width="0.0101%" height="15" fill="rgb(230,49,44)" fg:x="2562" fg:w="1"/><text x="26.1497%" y="111.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (15 samples, 0.15%)</title><rect x="25.7683%" y="149" width="0.1516%" height="15" fill="rgb(229,67,23)" fg:x="2549" fg:w="15"/><text x="26.0183%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`realloc (15 samples, 0.15%)</title><rect x="25.7683%" y="133" width="0.1516%" height="15" fill="rgb(249,83,47)" fg:x="2549" fg:w="15"/><text x="26.0183%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="25.9098%" y="117" width="0.0101%" height="15" fill="rgb(215,43,3)" fg:x="2563" fg:w="1"/><text x="26.1598%" y="127.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (18 samples, 0.18%)</title><rect x="25.7582%" y="165" width="0.1820%" height="15" fill="rgb(238,154,13)" fg:x="2548" fg:w="18"/><text x="26.0082%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="25.9199%" y="149" width="0.0202%" height="15" fill="rgb(219,56,2)" fg:x="2564" fg:w="2"/><text x="26.1699%" y="159.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (33 samples, 0.33%)</title><rect x="25.6470%" y="181" width="0.3336%" height="15" fill="rgb(233,0,4)" fg:x="2537" fg:w="33"/><text x="25.8970%" y="191.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.04%)</title><rect x="25.9402%" y="165" width="0.0404%" height="15" fill="rgb(235,30,7)" fg:x="2566" fg:w="4"/><text x="26.1902%" y="175.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::reserve_rehash (1 samples, 0.01%)</title><rect x="25.9705%" y="149" width="0.0101%" height="15" fill="rgb(250,79,13)" fg:x="2569" fg:w="1"/><text x="26.2205%" y="159.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (7 samples, 0.07%)</title><rect x="25.9806%" y="181" width="0.0708%" height="15" fill="rgb(211,146,34)" fg:x="2570" fg:w="7"/><text x="26.2306%" y="191.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (16 samples, 0.16%)</title><rect x="26.0514%" y="181" width="0.1617%" height="15" fill="rgb(228,22,38)" fg:x="2577" fg:w="16"/><text x="26.3014%" y="191.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (6 samples, 0.06%)</title><rect x="26.1524%" y="165" width="0.0607%" height="15" fill="rgb(235,168,5)" fg:x="2587" fg:w="6"/><text x="26.4024%" y="175.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (5 samples, 0.05%)</title><rect x="26.2131%" y="181" width="0.0505%" height="15" fill="rgb(221,155,16)" fg:x="2593" fg:w="5"/><text x="26.4631%" y="191.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (35 samples, 0.35%)</title><rect x="26.2636%" y="181" width="0.3538%" height="15" fill="rgb(215,215,53)" fg:x="2598" fg:w="35"/><text x="26.5136%" y="191.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (239 samples, 2.42%)</title><rect x="26.6175%" y="181" width="2.4161%" height="15" fill="rgb(223,4,10)" fg:x="2633" fg:w="239"/><text x="26.8675%" y="191.50">Sq..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="29.0336%" y="181" width="0.0202%" height="15" fill="rgb(234,103,6)" fg:x="2872" fg:w="2"/><text x="29.2836%" y="191.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (19 samples, 0.19%)</title><rect x="29.0538%" y="181" width="0.1921%" height="15" fill="rgb(227,97,0)" fg:x="2874" fg:w="19"/><text x="29.3038%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (5 samples, 0.05%)</title><rect x="29.2459%" y="181" width="0.0505%" height="15" fill="rgb(234,150,53)" fg:x="2893" fg:w="5"/><text x="29.4959%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (20 samples, 0.20%)</title><rect x="29.2964%" y="181" width="0.2022%" height="15" fill="rgb(228,201,54)" fg:x="2898" fg:w="20"/><text x="29.5464%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (62 samples, 0.63%)</title><rect x="29.4986%" y="181" width="0.6268%" height="15" fill="rgb(222,22,37)" fg:x="2918" fg:w="62"/><text x="29.7486%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`free (9 samples, 0.09%)</title><rect x="30.1254%" y="181" width="0.0910%" height="15" fill="rgb(237,53,32)" fg:x="2980" fg:w="9"/><text x="30.3754%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (29 samples, 0.29%)</title><rect x="30.2163%" y="181" width="0.2932%" height="15" fill="rgb(233,25,53)" fg:x="2989" fg:w="29"/><text x="30.4663%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.31%)</title><rect x="30.5095%" y="181" width="0.3134%" height="15" fill="rgb(210,40,34)" fg:x="3018" fg:w="31"/><text x="30.7595%" y="191.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (1,578 samples, 15.95%)</title><rect x="15.1233%" y="197" width="15.9523%" height="15" fill="rgb(241,220,44)" fg:x="1496" fg:w="1578"/><text x="15.3733%" y="207.50">Squaring-The-Square`Squar..</text></g><g><title>libsystem_platform.dylib`_platform_memset (25 samples, 0.25%)</title><rect x="30.8229%" y="181" width="0.2527%" height="15" fill="rgb(235,28,35)" fg:x="3049" fg:w="25"/><text x="31.0729%" y="191.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$realloc (2 samples, 0.02%)</title><rect x="31.4092%" y="165" width="0.0202%" height="15" fill="rgb(210,56,17)" fg:x="3107" fg:w="2"/><text x="31.6592%" y="175.50"></text></g><g><title>Squaring-The-Square`__rdl_realloc (4 samples, 0.04%)</title><rect x="31.4294%" y="165" width="0.0404%" height="15" fill="rgb(224,130,29)" fg:x="3109" fg:w="4"/><text x="31.6794%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (8 samples, 0.08%)</title><rect x="31.4800%" y="149" width="0.0809%" height="15" fill="rgb(235,212,8)" fg:x="3114" fg:w="8"/><text x="31.7300%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.03%)</title><rect x="31.6721%" y="133" width="0.0303%" height="15" fill="rgb(223,33,50)" fg:x="3133" fg:w="3"/><text x="31.9221%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (1 samples, 0.01%)</title><rect x="31.7529%" y="117" width="0.0101%" height="15" fill="rgb(219,149,13)" fg:x="3141" fg:w="1"/><text x="32.0029%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (3 samples, 0.03%)</title><rect x="31.7630%" y="117" width="0.0303%" height="15" fill="rgb(250,156,29)" fg:x="3142" fg:w="3"/><text x="32.0130%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (5 samples, 0.05%)</title><rect x="31.7934%" y="117" width="0.0505%" height="15" fill="rgb(216,193,19)" fg:x="3145" fg:w="5"/><text x="32.0434%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (6 samples, 0.06%)</title><rect x="31.8439%" y="117" width="0.0607%" height="15" fill="rgb(216,135,14)" fg:x="3150" fg:w="6"/><text x="32.0939%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="31.9551%" y="101" width="0.0101%" height="15" fill="rgb(241,47,5)" fg:x="3161" fg:w="1"/><text x="32.2051%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (13 samples, 0.13%)</title><rect x="31.9652%" y="101" width="0.1314%" height="15" fill="rgb(233,42,35)" fg:x="3162" fg:w="13"/><text x="32.2152%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (20 samples, 0.20%)</title><rect x="31.9046%" y="117" width="0.2022%" height="15" fill="rgb(231,13,6)" fg:x="3156" fg:w="20"/><text x="32.1546%" y="127.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="32.0966%" y="101" width="0.0101%" height="15" fill="rgb(207,181,40)" fg:x="3175" fg:w="1"/><text x="32.3466%" y="111.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (42 samples, 0.42%)</title><rect x="31.7024%" y="133" width="0.4246%" height="15" fill="rgb(254,173,49)" fg:x="3136" fg:w="42"/><text x="31.9524%" y="143.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (2 samples, 0.02%)</title><rect x="32.1068%" y="117" width="0.0202%" height="15" fill="rgb(221,1,38)" fg:x="3176" fg:w="2"/><text x="32.3568%" y="127.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (67 samples, 0.68%)</title><rect x="31.4699%" y="165" width="0.6773%" height="15" fill="rgb(206,124,46)" fg:x="3113" fg:w="67"/><text x="31.7199%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`realloc (58 samples, 0.59%)</title><rect x="31.5609%" y="149" width="0.5863%" height="15" fill="rgb(249,21,11)" fg:x="3122" fg:w="58"/><text x="31.8109%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="32.1270%" y="133" width="0.0202%" height="15" fill="rgb(222,201,40)" fg:x="3178" fg:w="2"/><text x="32.3770%" y="143.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (79 samples, 0.80%)</title><rect x="31.3688%" y="181" width="0.7986%" height="15" fill="rgb(235,61,29)" fg:x="3103" fg:w="79"/><text x="31.6188%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="32.1472%" y="165" width="0.0202%" height="15" fill="rgb(219,207,3)" fg:x="3180" fg:w="2"/><text x="32.3972%" y="175.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (120 samples, 1.21%)</title><rect x="31.0756%" y="197" width="1.2131%" height="15" fill="rgb(222,56,46)" fg:x="3074" fg:w="120"/><text x="31.3256%" y="207.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (12 samples, 0.12%)</title><rect x="32.1674%" y="181" width="0.1213%" height="15" fill="rgb(239,76,54)" fg:x="3182" fg:w="12"/><text x="32.4174%" y="191.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (20 samples, 0.20%)</title><rect x="32.2887%" y="197" width="0.2022%" height="15" fill="rgb(231,124,27)" fg:x="3194" fg:w="20"/><text x="32.5387%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (44 samples, 0.44%)</title><rect x="32.4909%" y="197" width="0.4448%" height="15" fill="rgb(249,195,6)" fg:x="3214" fg:w="44"/><text x="32.7409%" y="207.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (10 samples, 0.10%)</title><rect x="32.8346%" y="181" width="0.1011%" height="15" fill="rgb(237,174,47)" fg:x="3248" fg:w="10"/><text x="33.0846%" y="191.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (9 samples, 0.09%)</title><rect x="32.9357%" y="197" width="0.0910%" height="15" fill="rgb(206,201,31)" fg:x="3258" fg:w="9"/><text x="33.1857%" y="207.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (114 samples, 1.15%)</title><rect x="33.0267%" y="197" width="1.1524%" height="15" fill="rgb(231,57,52)" fg:x="3267" fg:w="114"/><text x="33.2767%" y="207.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (500 samples, 5.05%)</title><rect x="34.1791%" y="197" width="5.0546%" height="15" fill="rgb(248,177,22)" fg:x="3381" fg:w="500"/><text x="34.4291%" y="207.50">Squari..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.07%)</title><rect x="39.2337%" y="197" width="0.0708%" height="15" fill="rgb(215,211,37)" fg:x="3881" fg:w="7"/><text x="39.4837%" y="207.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (34 samples, 0.34%)</title><rect x="39.3045%" y="197" width="0.3437%" height="15" fill="rgb(241,128,51)" fg:x="3888" fg:w="34"/><text x="39.5545%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (11 samples, 0.11%)</title><rect x="39.6482%" y="197" width="0.1112%" height="15" fill="rgb(227,165,31)" fg:x="3922" fg:w="11"/><text x="39.8982%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (59 samples, 0.60%)</title><rect x="39.7594%" y="197" width="0.5964%" height="15" fill="rgb(228,167,24)" fg:x="3933" fg:w="59"/><text x="40.0094%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (141 samples, 1.43%)</title><rect x="40.3558%" y="197" width="1.4254%" height="15" fill="rgb(228,143,12)" fg:x="3992" fg:w="141"/><text x="40.6058%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`free (35 samples, 0.35%)</title><rect x="41.7812%" y="197" width="0.3538%" height="15" fill="rgb(249,149,8)" fg:x="4133" fg:w="35"/><text x="42.0312%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (99 samples, 1.00%)</title><rect x="42.1351%" y="197" width="1.0008%" height="15" fill="rgb(243,35,44)" fg:x="4168" fg:w="99"/><text x="42.3851%" y="207.50"></text></g><g><title>libsystem_platform.dylib`__bzero (9 samples, 0.09%)</title><rect x="43.1359%" y="197" width="0.0910%" height="15" fill="rgb(246,89,9)" fg:x="4267" fg:w="9"/><text x="43.3859%" y="207.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (76 samples, 0.77%)</title><rect x="43.2268%" y="197" width="0.7683%" height="15" fill="rgb(233,213,13)" fg:x="4276" fg:w="76"/><text x="43.4768%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (3,437 samples, 34.75%)</title><rect x="9.8564%" y="213" width="34.7452%" height="15" fill="rgb(233,141,41)" fg:x="975" fg:w="3437"/><text x="10.1064%" y="223.50">Squaring-The-Square`Squaring_The_Square::exhaustive::dec..</text></g><g><title>libsystem_platform.dylib`_platform_memset (60 samples, 0.61%)</title><rect x="43.9951%" y="197" width="0.6066%" height="15" fill="rgb(239,167,4)" fg:x="4352" fg:w="60"/><text x="44.2451%" y="207.50"></text></g><g><title>Squaring-The-Square`__rdl_realloc (4 samples, 0.04%)</title><rect x="45.2992%" y="181" width="0.0404%" height="15" fill="rgb(209,217,16)" fg:x="4481" fg:w="4"/><text x="45.5492%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (3 samples, 0.03%)</title><rect x="45.3801%" y="165" width="0.0303%" height="15" fill="rgb(219,88,35)" fg:x="4489" fg:w="3"/><text x="45.6301%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (18 samples, 0.18%)</title><rect x="45.4104%" y="165" width="0.1820%" height="15" fill="rgb(220,193,23)" fg:x="4492" fg:w="18"/><text x="45.6604%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (6 samples, 0.06%)</title><rect x="45.7137%" y="149" width="0.0607%" height="15" fill="rgb(230,90,52)" fg:x="4522" fg:w="6"/><text x="45.9637%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_memmove (2 samples, 0.02%)</title><rect x="45.8957%" y="133" width="0.0202%" height="15" fill="rgb(252,106,19)" fg:x="4540" fg:w="2"/><text x="46.1457%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="45.9159%" y="133" width="0.0101%" height="15" fill="rgb(206,74,20)" fg:x="4542" fg:w="1"/><text x="46.1659%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.17%)</title><rect x="45.9260%" y="133" width="0.1719%" height="15" fill="rgb(230,138,44)" fg:x="4543" fg:w="17"/><text x="46.1760%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (10 samples, 0.10%)</title><rect x="46.0979%" y="133" width="0.1011%" height="15" fill="rgb(235,182,43)" fg:x="4560" fg:w="10"/><text x="46.3479%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (3 samples, 0.03%)</title><rect x="46.2293%" y="117" width="0.0303%" height="15" fill="rgb(242,16,51)" fg:x="4573" fg:w="3"/><text x="46.4793%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (25 samples, 0.25%)</title><rect x="46.2596%" y="117" width="0.2527%" height="15" fill="rgb(248,9,4)" fg:x="4576" fg:w="25"/><text x="46.5096%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (32 samples, 0.32%)</title><rect x="46.1989%" y="133" width="0.3235%" height="15" fill="rgb(210,31,22)" fg:x="4570" fg:w="32"/><text x="46.4489%" y="143.50"></text></g><g><title>libsystem_platform.dylib`__bzero (1 samples, 0.01%)</title><rect x="46.5123%" y="117" width="0.0101%" height="15" fill="rgb(239,54,39)" fg:x="4601" fg:w="1"/><text x="46.7623%" y="127.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (80 samples, 0.81%)</title><rect x="45.7744%" y="149" width="0.8087%" height="15" fill="rgb(230,99,41)" fg:x="4528" fg:w="80"/><text x="46.0244%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (6 samples, 0.06%)</title><rect x="46.5224%" y="133" width="0.0607%" height="15" fill="rgb(253,106,12)" fg:x="4602" fg:w="6"/><text x="46.7724%" y="143.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (125 samples, 1.26%)</title><rect x="45.3397%" y="181" width="1.2636%" height="15" fill="rgb(213,46,41)" fg:x="4485" fg:w="125"/><text x="45.5897%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`realloc (100 samples, 1.01%)</title><rect x="45.5924%" y="165" width="1.0109%" height="15" fill="rgb(215,133,35)" fg:x="4510" fg:w="100"/><text x="45.8424%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (2 samples, 0.02%)</title><rect x="46.5831%" y="149" width="0.0202%" height="15" fill="rgb(213,28,5)" fg:x="4608" fg:w="2"/><text x="46.8331%" y="159.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (142 samples, 1.44%)</title><rect x="45.2285%" y="197" width="1.4355%" height="15" fill="rgb(215,77,49)" fg:x="4474" fg:w="142"/><text x="45.4785%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (6 samples, 0.06%)</title><rect x="46.6033%" y="181" width="0.0607%" height="15" fill="rgb(248,100,22)" fg:x="4610" fg:w="6"/><text x="46.8533%" y="191.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (5 samples, 0.05%)</title><rect x="46.6640%" y="197" width="0.0505%" height="15" fill="rgb(208,67,9)" fg:x="4616" fg:w="5"/><text x="46.9140%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (244 samples, 2.47%)</title><rect x="44.6017%" y="213" width="2.4666%" height="15" fill="rgb(219,133,21)" fg:x="4412" fg:w="244"/><text x="44.8517%" y="223.50">Sq..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (35 samples, 0.35%)</title><rect x="46.7145%" y="197" width="0.3538%" height="15" fill="rgb(246,46,29)" fg:x="4621" fg:w="35"/><text x="46.9645%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (38 samples, 0.38%)</title><rect x="47.0683%" y="213" width="0.3841%" height="15" fill="rgb(246,185,52)" fg:x="4656" fg:w="38"/><text x="47.3183%" y="223.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (45 samples, 0.45%)</title><rect x="47.4525%" y="213" width="0.4549%" height="15" fill="rgb(252,136,11)" fg:x="4694" fg:w="45"/><text x="47.7025%" y="223.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (15 samples, 0.15%)</title><rect x="47.7558%" y="197" width="0.1516%" height="15" fill="rgb(219,138,53)" fg:x="4724" fg:w="15"/><text x="48.0058%" y="207.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (13 samples, 0.13%)</title><rect x="47.9074%" y="213" width="0.1314%" height="15" fill="rgb(211,51,23)" fg:x="4739" fg:w="13"/><text x="48.1574%" y="223.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (4 samples, 0.04%)</title><rect x="48.0388%" y="213" width="0.0404%" height="15" fill="rgb(247,221,28)" fg:x="4752" fg:w="4"/><text x="48.2888%" y="223.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (238 samples, 2.41%)</title><rect x="48.0793%" y="213" width="2.4060%" height="15" fill="rgb(251,222,45)" fg:x="4756" fg:w="238"/><text x="48.3293%" y="223.50">Sq..</text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,071 samples, 10.83%)</title><rect x="50.4852%" y="213" width="10.8269%" height="15" fill="rgb(217,162,53)" fg:x="4994" fg:w="1071"/><text x="50.7352%" y="223.50">Squaring-The-Squ..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.07%)</title><rect x="61.3122%" y="213" width="0.0708%" height="15" fill="rgb(229,93,14)" fg:x="6065" fg:w="7"/><text x="61.5622%" y="223.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (71 samples, 0.72%)</title><rect x="61.3829%" y="213" width="0.7178%" height="15" fill="rgb(209,67,49)" fg:x="6072" fg:w="71"/><text x="61.6329%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (14 samples, 0.14%)</title><rect x="62.1007%" y="213" width="0.1415%" height="15" fill="rgb(213,87,29)" fg:x="6143" fg:w="14"/><text x="62.3507%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (53 samples, 0.54%)</title><rect x="62.2422%" y="213" width="0.5358%" height="15" fill="rgb(205,151,52)" fg:x="6157" fg:w="53"/><text x="62.4922%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (110 samples, 1.11%)</title><rect x="62.7780%" y="213" width="1.1120%" height="15" fill="rgb(253,215,39)" fg:x="6210" fg:w="110"/><text x="63.0280%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`free (72 samples, 0.73%)</title><rect x="63.8900%" y="213" width="0.7279%" height="15" fill="rgb(221,220,41)" fg:x="6320" fg:w="72"/><text x="64.1400%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (134 samples, 1.35%)</title><rect x="64.6179%" y="213" width="1.3546%" height="15" fill="rgb(218,133,21)" fg:x="6392" fg:w="134"/><text x="64.8679%" y="223.50"></text></g><g><title>libsystem_platform.dylib`__bzero (10 samples, 0.10%)</title><rect x="65.9725%" y="213" width="0.1011%" height="15" fill="rgb(221,193,43)" fg:x="6526" fg:w="10"/><text x="66.2225%" y="223.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (129 samples, 1.30%)</title><rect x="66.0736%" y="213" width="1.3041%" height="15" fill="rgb(240,128,52)" fg:x="6536" fg:w="129"/><text x="66.3236%" y="223.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (6,335 samples, 64.04%)</title><rect x="3.9224%" y="229" width="64.0416%" height="15" fill="rgb(253,114,12)" fg:x="388" fg:w="6335"/><text x="4.1724%" y="239.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>libsystem_platform.dylib`_platform_memset (58 samples, 0.59%)</title><rect x="67.3777%" y="213" width="0.5863%" height="15" fill="rgb(215,223,47)" fg:x="6665" fg:w="58"/><text x="67.6277%" y="223.50"></text></g><g><title>Squaring-The-Square`DYLD-STUB$$realloc (3 samples, 0.03%)</title><rect x="68.7020%" y="197" width="0.0303%" height="15" fill="rgb(248,225,23)" fg:x="6796" fg:w="3"/><text x="68.9520%" y="207.50"></text></g><g><title>Squaring-The-Square`__rdl_realloc (1 samples, 0.01%)</title><rect x="68.7323%" y="197" width="0.0101%" height="15" fill="rgb(250,108,0)" fg:x="6799" fg:w="1"/><text x="68.9823%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (2 samples, 0.02%)</title><rect x="68.7626%" y="181" width="0.0202%" height="15" fill="rgb(228,208,7)" fg:x="6802" fg:w="2"/><text x="69.0126%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (13 samples, 0.13%)</title><rect x="68.7829%" y="181" width="0.1314%" height="15" fill="rgb(244,45,10)" fg:x="6804" fg:w="13"/><text x="69.0329%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`default_zone_realloc (3 samples, 0.03%)</title><rect x="69.0154%" y="165" width="0.0303%" height="15" fill="rgb(207,125,25)" fg:x="6827" fg:w="3"/><text x="69.2654%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (17 samples, 0.17%)</title><rect x="69.0760%" y="149" width="0.1719%" height="15" fill="rgb(210,195,18)" fg:x="6833" fg:w="17"/><text x="69.3260%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (11 samples, 0.11%)</title><rect x="69.2479%" y="149" width="0.1112%" height="15" fill="rgb(249,80,12)" fg:x="6850" fg:w="11"/><text x="69.4979%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (1 samples, 0.01%)</title><rect x="69.3793%" y="133" width="0.0101%" height="15" fill="rgb(221,65,9)" fg:x="6863" fg:w="1"/><text x="69.6293%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (27 samples, 0.27%)</title><rect x="69.3894%" y="133" width="0.2729%" height="15" fill="rgb(235,49,36)" fg:x="6864" fg:w="27"/><text x="69.6394%" y="143.50"></text></g><g><title>libsystem_platform.dylib`__bzero (3 samples, 0.03%)</title><rect x="69.6624%" y="133" width="0.0303%" height="15" fill="rgb(225,32,20)" fg:x="6891" fg:w="3"/><text x="69.9124%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (34 samples, 0.34%)</title><rect x="69.3591%" y="149" width="0.3437%" height="15" fill="rgb(215,141,46)" fg:x="6861" fg:w="34"/><text x="69.6091%" y="159.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="69.6927%" y="133" width="0.0101%" height="15" fill="rgb(250,160,47)" fg:x="6894" fg:w="1"/><text x="69.9427%" y="143.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (68 samples, 0.69%)</title><rect x="69.0457%" y="165" width="0.6874%" height="15" fill="rgb(216,222,40)" fg:x="6830" fg:w="68"/><text x="69.2957%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (3 samples, 0.03%)</title><rect x="69.7028%" y="149" width="0.0303%" height="15" fill="rgb(234,217,39)" fg:x="6895" fg:w="3"/><text x="69.9528%" y="159.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (101 samples, 1.02%)</title><rect x="68.7424%" y="197" width="1.0210%" height="15" fill="rgb(207,178,40)" fg:x="6800" fg:w="101"/><text x="68.9924%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`realloc (84 samples, 0.85%)</title><rect x="68.9143%" y="181" width="0.8492%" height="15" fill="rgb(221,136,13)" fg:x="6817" fg:w="84"/><text x="69.1643%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (3 samples, 0.03%)</title><rect x="69.7331%" y="165" width="0.0303%" height="15" fill="rgb(249,199,10)" fg:x="6898" fg:w="3"/><text x="69.9831%" y="175.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (112 samples, 1.13%)</title><rect x="68.6514%" y="213" width="1.1322%" height="15" fill="rgb(249,222,13)" fg:x="6791" fg:w="112"/><text x="68.9014%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (2 samples, 0.02%)</title><rect x="69.7634%" y="197" width="0.0202%" height="15" fill="rgb(244,185,38)" fg:x="6901" fg:w="2"/><text x="70.0134%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (204 samples, 2.06%)</title><rect x="67.9640%" y="229" width="2.0623%" height="15" fill="rgb(236,202,9)" fg:x="6723" fg:w="204"/><text x="68.2140%" y="239.50">S..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (24 samples, 0.24%)</title><rect x="69.7837%" y="213" width="0.2426%" height="15" fill="rgb(250,229,37)" fg:x="6903" fg:w="24"/><text x="70.0337%" y="223.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (43 samples, 0.43%)</title><rect x="70.0263%" y="229" width="0.4347%" height="15" fill="rgb(206,174,23)" fg:x="6927" fg:w="43"/><text x="70.2763%" y="239.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (28 samples, 0.28%)</title><rect x="70.4610%" y="229" width="0.2831%" height="15" fill="rgb(211,33,43)" fg:x="6970" fg:w="28"/><text x="70.7110%" y="239.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (7 samples, 0.07%)</title><rect x="70.6733%" y="213" width="0.0708%" height="15" fill="rgb(245,58,50)" fg:x="6991" fg:w="7"/><text x="70.9233%" y="223.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (4 samples, 0.04%)</title><rect x="70.7440%" y="229" width="0.0404%" height="15" fill="rgb(244,68,36)" fg:x="6998" fg:w="4"/><text x="70.9940%" y="239.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="70.7845%" y="229" width="0.0101%" height="15" fill="rgb(232,229,15)" fg:x="7002" fg:w="1"/><text x="71.0345%" y="239.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (178 samples, 1.80%)</title><rect x="70.7946%" y="229" width="1.7994%" height="15" fill="rgb(254,30,23)" fg:x="7003" fg:w="178"/><text x="71.0446%" y="239.50">S..</text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (1,159 samples, 11.72%)</title><rect x="72.5940%" y="229" width="11.7165%" height="15" fill="rgb(235,160,14)" fg:x="7181" fg:w="1159"/><text x="72.8440%" y="239.50">Squaring-The-Squa..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (11 samples, 0.11%)</title><rect x="84.3106%" y="229" width="0.1112%" height="15" fill="rgb(212,155,44)" fg:x="8340" fg:w="11"/><text x="84.5606%" y="239.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (63 samples, 0.64%)</title><rect x="84.4218%" y="229" width="0.6369%" height="15" fill="rgb(226,2,50)" fg:x="8351" fg:w="63"/><text x="84.6718%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`DYLD-STUB$$_platform_bzero (6 samples, 0.06%)</title><rect x="85.0586%" y="229" width="0.0607%" height="15" fill="rgb(234,177,6)" fg:x="8414" fg:w="6"/><text x="85.3086%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (27 samples, 0.27%)</title><rect x="85.1193%" y="229" width="0.2729%" height="15" fill="rgb(217,24,9)" fg:x="8420" fg:w="27"/><text x="85.3693%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (82 samples, 0.83%)</title><rect x="85.3922%" y="229" width="0.8290%" height="15" fill="rgb(220,13,46)" fg:x="8447" fg:w="82"/><text x="85.6422%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`free (63 samples, 0.64%)</title><rect x="86.2212%" y="229" width="0.6369%" height="15" fill="rgb(239,221,27)" fg:x="8529" fg:w="63"/><text x="86.4712%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (66 samples, 0.67%)</title><rect x="86.8581%" y="229" width="0.6672%" height="15" fill="rgb(222,198,25)" fg:x="8592" fg:w="66"/><text x="87.1081%" y="239.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.04%)</title><rect x="87.5253%" y="229" width="0.0404%" height="15" fill="rgb(211,99,13)" fg:x="8658" fg:w="4"/><text x="87.7753%" y="239.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (86 samples, 0.87%)</title><rect x="87.5657%" y="229" width="0.8694%" height="15" fill="rgb(232,111,31)" fg:x="8662" fg:w="86"/><text x="87.8157%" y="239.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (8,651 samples, 87.45%)</title><rect x="1.0109%" y="245" width="87.4545%" height="15" fill="rgb(245,82,37)" fg:x="100" fg:w="8651"/><text x="1.2609%" y="255.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>libsystem_platform.dylib`_platform_memset (3 samples, 0.03%)</title><rect x="88.4351%" y="229" width="0.0303%" height="15" fill="rgb(227,149,46)" fg:x="8748" fg:w="3"/><text x="88.6851%" y="239.50"></text></g><g><title>Squaring-The-Square`__rdl_realloc (1 samples, 0.01%)</title><rect x="88.9102%" y="197" width="0.0101%" height="15" fill="rgb(218,36,50)" fg:x="8795" fg:w="1"/><text x="89.1602%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_size (4 samples, 0.04%)</title><rect x="88.9203%" y="197" width="0.0404%" height="15" fill="rgb(226,80,48)" fg:x="8796" fg:w="4"/><text x="89.1703%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="88.9911%" y="165" width="0.0202%" height="15" fill="rgb(238,224,15)" fg:x="8803" fg:w="2"/><text x="89.2411%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (6 samples, 0.06%)</title><rect x="89.0113%" y="165" width="0.0607%" height="15" fill="rgb(241,136,10)" fg:x="8805" fg:w="6"/><text x="89.2613%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_pointer_size (2 samples, 0.02%)</title><rect x="89.0720%" y="165" width="0.0202%" height="15" fill="rgb(208,32,45)" fg:x="8811" fg:w="2"/><text x="89.3220%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (5 samples, 0.05%)</title><rect x="89.1124%" y="149" width="0.0505%" height="15" fill="rgb(207,135,9)" fg:x="8815" fg:w="5"/><text x="89.3624%" y="159.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (8 samples, 0.08%)</title><rect x="89.0922%" y="165" width="0.0809%" height="15" fill="rgb(206,86,44)" fg:x="8813" fg:w="8"/><text x="89.3422%" y="175.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (1 samples, 0.01%)</title><rect x="89.1630%" y="149" width="0.0101%" height="15" fill="rgb(245,177,15)" fg:x="8820" fg:w="1"/><text x="89.4130%" y="159.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (30 samples, 0.30%)</title><rect x="88.9102%" y="213" width="0.3033%" height="15" fill="rgb(206,64,50)" fg:x="8795" fg:w="30"/><text x="89.1602%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`realloc (25 samples, 0.25%)</title><rect x="88.9608%" y="197" width="0.2527%" height="15" fill="rgb(234,36,40)" fg:x="8800" fg:w="25"/><text x="89.2108%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (25 samples, 0.25%)</title><rect x="88.9608%" y="181" width="0.2527%" height="15" fill="rgb(213,64,8)" fg:x="8800" fg:w="25"/><text x="89.2108%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (4 samples, 0.04%)</title><rect x="89.1731%" y="165" width="0.0404%" height="15" fill="rgb(210,75,36)" fg:x="8821" fg:w="4"/><text x="89.4231%" y="175.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (34 samples, 0.34%)</title><rect x="88.8799%" y="229" width="0.3437%" height="15" fill="rgb(229,88,21)" fg:x="8792" fg:w="34"/><text x="89.1299%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="89.2135%" y="213" width="0.0101%" height="15" fill="rgb(252,204,47)" fg:x="8825" fg:w="1"/><text x="89.4635%" y="223.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="89.2236%" y="229" width="0.0101%" height="15" fill="rgb(208,77,27)" fg:x="8826" fg:w="1"/><text x="89.4736%" y="239.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (80 samples, 0.81%)</title><rect x="88.4654%" y="245" width="0.8087%" height="15" fill="rgb(221,76,26)" fg:x="8751" fg:w="80"/><text x="88.7154%" y="255.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (4 samples, 0.04%)</title><rect x="89.2337%" y="229" width="0.0404%" height="15" fill="rgb(225,139,18)" fg:x="8827" fg:w="4"/><text x="89.4837%" y="239.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (30 samples, 0.30%)</title><rect x="89.2742%" y="245" width="0.3033%" height="15" fill="rgb(230,137,11)" fg:x="8831" fg:w="30"/><text x="89.5242%" y="255.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::vertical_extension (10 samples, 0.10%)</title><rect x="89.5774%" y="245" width="0.1011%" height="15" fill="rgb(212,28,1)" fg:x="8861" fg:w="10"/><text x="89.8274%" y="255.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (1 samples, 0.01%)</title><rect x="89.6684%" y="229" width="0.0101%" height="15" fill="rgb(248,164,17)" fg:x="8870" fg:w="1"/><text x="89.9184%" y="239.50"></text></g><g><title>Squaring-The-Square`__rdl_alloc (1 samples, 0.01%)</title><rect x="89.6785%" y="245" width="0.0101%" height="15" fill="rgb(222,171,42)" fg:x="8871" fg:w="1"/><text x="89.9285%" y="255.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (63 samples, 0.64%)</title><rect x="89.6886%" y="245" width="0.6369%" height="15" fill="rgb(243,84,45)" fg:x="8872" fg:w="63"/><text x="89.9386%" y="255.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (545 samples, 5.51%)</title><rect x="90.3255%" y="245" width="5.5095%" height="15" fill="rgb(252,49,23)" fg:x="8935" fg:w="545"/><text x="90.5755%" y="255.50">Squarin..</text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="95.8350%" y="245" width="0.0202%" height="15" fill="rgb(215,19,7)" fg:x="9480" fg:w="2"/><text x="96.0850%" y="255.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (23 samples, 0.23%)</title><rect x="95.8552%" y="245" width="0.2325%" height="15" fill="rgb(238,81,41)" fg:x="9482" fg:w="23"/><text x="96.1052%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_malloc_zone_malloc (7 samples, 0.07%)</title><rect x="96.0877%" y="245" width="0.0708%" height="15" fill="rgb(210,199,37)" fg:x="9505" fg:w="7"/><text x="96.3377%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (19 samples, 0.19%)</title><rect x="96.1585%" y="245" width="0.1921%" height="15" fill="rgb(244,192,49)" fg:x="9512" fg:w="19"/><text x="96.4085%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`free (34 samples, 0.34%)</title><rect x="96.3506%" y="245" width="0.3437%" height="15" fill="rgb(226,211,11)" fg:x="9531" fg:w="34"/><text x="96.6006%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (10 samples, 0.10%)</title><rect x="96.6943%" y="245" width="0.1011%" height="15" fill="rgb(236,162,54)" fg:x="9565" fg:w="10"/><text x="96.9443%" y="255.50"></text></g><g><title>libsystem_platform.dylib`__bzero (4 samples, 0.04%)</title><rect x="96.7954%" y="245" width="0.0404%" height="15" fill="rgb(220,229,9)" fg:x="9575" fg:w="4"/><text x="97.0454%" y="255.50"></text></g><g><title>libsystem_platform.dylib`_platform_memmove (31 samples, 0.31%)</title><rect x="96.8358%" y="245" width="0.3134%" height="15" fill="rgb(250,87,22)" fg:x="9579" fg:w="31"/><text x="97.0858%" y="255.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,595 samples, 97.00%)</title><rect x="0.1719%" y="261" width="96.9976%" height="15" fill="rgb(239,43,17)" fg:x="17" fg:w="9595"/><text x="0.4219%" y="271.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="97.1492%" y="245" width="0.0202%" height="15" fill="rgb(231,177,25)" fg:x="9610" fg:w="2"/><text x="97.3992%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="97.2806%" y="181" width="0.0202%" height="15" fill="rgb(219,179,1)" fg:x="9623" fg:w="2"/><text x="97.5306%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_malloc (2 samples, 0.02%)</title><rect x="97.3008%" y="181" width="0.0202%" height="15" fill="rgb(238,219,53)" fg:x="9625" fg:w="2"/><text x="97.5508%" y="191.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="97.3211%" y="165" width="0.0202%" height="15" fill="rgb(232,167,36)" fg:x="9627" fg:w="2"/><text x="97.5711%" y="175.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (8 samples, 0.08%)</title><rect x="97.2806%" y="197" width="0.0809%" height="15" fill="rgb(244,19,51)" fg:x="9623" fg:w="8"/><text x="97.5306%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (4 samples, 0.04%)</title><rect x="97.3211%" y="181" width="0.0404%" height="15" fill="rgb(224,6,22)" fg:x="9627" fg:w="4"/><text x="97.5711%" y="191.50"></text></g><g><title>libsystem_platform.dylib`_platform_memset (2 samples, 0.02%)</title><rect x="97.3413%" y="165" width="0.0202%" height="15" fill="rgb(224,145,5)" fg:x="9629" fg:w="2"/><text x="97.5913%" y="175.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (20 samples, 0.20%)</title><rect x="97.1694%" y="261" width="0.2022%" height="15" fill="rgb(234,130,49)" fg:x="9612" fg:w="20"/><text x="97.4194%" y="271.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (11 samples, 0.11%)</title><rect x="97.2604%" y="245" width="0.1112%" height="15" fill="rgb(254,6,2)" fg:x="9621" fg:w="11"/><text x="97.5104%" y="255.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (10 samples, 0.10%)</title><rect x="97.2705%" y="229" width="0.1011%" height="15" fill="rgb(208,96,46)" fg:x="9622" fg:w="10"/><text x="97.5205%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`realloc (10 samples, 0.10%)</title><rect x="97.2705%" y="213" width="0.1011%" height="15" fill="rgb(239,3,39)" fg:x="9622" fg:w="10"/><text x="97.5205%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="97.3615%" y="197" width="0.0101%" height="15" fill="rgb(233,210,1)" fg:x="9631" fg:w="1"/><text x="97.6115%" y="207.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::remove_square (5 samples, 0.05%)</title><rect x="97.3716%" y="261" width="0.0505%" height="15" fill="rgb(244,137,37)" fg:x="9632" fg:w="5"/><text x="97.6216%" y="271.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (17 samples, 0.17%)</title><rect x="97.4222%" y="261" width="0.1719%" height="15" fill="rgb(240,136,2)" fg:x="9637" fg:w="17"/><text x="97.6722%" y="271.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (171 samples, 1.73%)</title><rect x="97.5940%" y="261" width="1.7287%" height="15" fill="rgb(239,18,37)" fg:x="9654" fg:w="171"/><text x="97.8440%" y="271.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::insert (2 samples, 0.02%)</title><rect x="99.3227%" y="261" width="0.0202%" height="15" fill="rgb(218,185,22)" fg:x="9825" fg:w="2"/><text x="99.5727%" y="271.50"></text></g><g><title>Squaring-The-Square`hashbrown::raw::RawTable&lt;T,A&gt;::remove_entry (2 samples, 0.02%)</title><rect x="99.3429%" y="261" width="0.0202%" height="15" fill="rgb(225,218,4)" fg:x="9827" fg:w="2"/><text x="99.5929%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (2 samples, 0.02%)</title><rect x="99.3631%" y="261" width="0.0202%" height="15" fill="rgb(230,182,32)" fg:x="9829" fg:w="2"/><text x="99.6131%" y="271.50"></text></g><g><title>libsystem_malloc.dylib`free (13 samples, 0.13%)</title><rect x="99.3833%" y="261" width="0.1314%" height="15" fill="rgb(242,56,43)" fg:x="9831" fg:w="13"/><text x="99.6333%" y="271.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,849 samples, 99.57%)</title><rect x="0.0202%" y="277" width="99.5653%" height="15" fill="rgb(233,99,24)" fg:x="2" fg:w="9849"/><text x="0.2702%" y="287.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>libsystem_platform.dylib`_platform_memmove (7 samples, 0.07%)</title><rect x="99.5148%" y="261" width="0.0708%" height="15" fill="rgb(234,209,42)" fg:x="9844" fg:w="7"/><text x="99.7648%" y="271.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::squares::Config::add_square_quick (2 samples, 0.02%)</title><rect x="99.5855%" y="277" width="0.0202%" height="15" fill="rgb(227,7,12)" fg:x="9851" fg:w="2"/><text x="99.8355%" y="287.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::RawVec&lt;T,A&gt;::reserve::do_reserve_and_handle (1 samples, 0.01%)</title><rect x="99.5956%" y="261" width="0.0101%" height="15" fill="rgb(245,203,43)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="271.50"></text></g><g><title>Squaring-The-Square`alloc::raw_vec::finish_grow (1 samples, 0.01%)</title><rect x="99.5956%" y="245" width="0.0101%" height="15" fill="rgb(238,205,33)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="255.50"></text></g><g><title>libsystem_malloc.dylib`realloc (1 samples, 0.01%)</title><rect x="99.5956%" y="229" width="0.0101%" height="15" fill="rgb(231,56,7)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="239.50"></text></g><g><title>libsystem_malloc.dylib`malloc_zone_realloc (1 samples, 0.01%)</title><rect x="99.5956%" y="213" width="0.0101%" height="15" fill="rgb(244,186,29)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="223.50"></text></g><g><title>libsystem_malloc.dylib`nanov2_realloc (1 samples, 0.01%)</title><rect x="99.5956%" y="197" width="0.0101%" height="15" fill="rgb(234,111,31)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="207.50"></text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="99.5956%" y="181" width="0.0101%" height="15" fill="rgb(241,149,10)" fg:x="9852" fg:w="1"/><text x="99.8456%" y="191.50"></text></g><g><title>Squaring-The-Square`core::hash::BuildHasher::hash_one (3 samples, 0.03%)</title><rect x="99.6057%" y="277" width="0.0303%" height="15" fill="rgb(249,206,44)" fg:x="9853" fg:w="3"/><text x="99.8557%" y="287.50"></text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (33 samples, 0.33%)</title><rect x="99.6361%" y="277" width="0.3336%" height="15" fill="rgb(251,153,30)" fg:x="9856" fg:w="33"/><text x="99.8861%" y="287.50"></text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,890 samples, 99.98%)</title><rect x="0.0000%" y="293" width="99.9798%" height="15" fill="rgb(239,152,38)" fg:x="0" fg:w="9890"/><text x="0.2500%" y="303.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>libsystem_malloc.dylib`_nanov2_free (1 samples, 0.01%)</title><rect x="99.9697%" y="277" width="0.0101%" height="15" fill="rgb(249,139,47)" fg:x="9889" fg:w="1"/><text x="100.2197%" y="287.50"></text></g><g><title>all (9,892 samples, 100%)</title><rect x="0.0000%" y="469" width="100.0000%" height="15" fill="rgb(244,64,35)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="479.50"></text></g><g><title>dyld`start (9,892 samples, 100.00%)</title><rect x="0.0000%" y="453" width="100.0000%" height="15" fill="rgb(216,46,15)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="463.50">dyld`start</text></g><g><title>Squaring-The-Square`main (9,892 samples, 100.00%)</title><rect x="0.0000%" y="437" width="100.0000%" height="15" fill="rgb(250,74,19)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="447.50">Squaring-The-Square`main</text></g><g><title>Squaring-The-Square`std::rt::lang_start_internal (9,892 samples, 100.00%)</title><rect x="0.0000%" y="421" width="100.0000%" height="15" fill="rgb(249,42,33)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="431.50">Squaring-The-Square`std::rt::lang_start_internal</text></g><g><title>Squaring-The-Square`std::rt::lang_start::_{{closure}} (9,892 samples, 100.00%)</title><rect x="0.0000%" y="405" width="100.0000%" height="15" fill="rgb(242,149,17)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="415.50">Squaring-The-Square`std::rt::lang_start::_{{closure}}</text></g><g><title>Squaring-The-Square`std::sys_common::backtrace::__rust_begin_short_backtrace (9,892 samples, 100.00%)</title><rect x="0.0000%" y="389" width="100.0000%" height="15" fill="rgb(244,29,21)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="399.50">Squaring-The-Square`std::sys_common::backtrace::__rust_begin_short_backtrace</text></g><g><title>Squaring-The-Square`Squaring_The_Square::main (9,892 samples, 100.00%)</title><rect x="0.0000%" y="373" width="100.0000%" height="15" fill="rgb(220,130,37)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="383.50">Squaring-The-Square`Squaring_The_Square::main</text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::solve (9,892 samples, 100.00%)</title><rect x="0.0000%" y="357" width="100.0000%" height="15" fill="rgb(211,67,2)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="367.50">Squaring-The-Square`Squaring_The_Square::exhaustive::solve</text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,892 samples, 100.00%)</title><rect x="0.0000%" y="341" width="100.0000%" height="15" fill="rgb(235,68,52)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="351.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,892 samples, 100.00%)</title><rect x="0.0000%" y="325" width="100.0000%" height="15" fill="rgb(246,142,3)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="335.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>Squaring-The-Square`Squaring_The_Square::exhaustive::decompose (9,892 samples, 100.00%)</title><rect x="0.0000%" y="309" width="100.0000%" height="15" fill="rgb(241,25,7)" fg:x="0" fg:w="9892"/><text x="0.2500%" y="319.50">Squaring-The-Square`Squaring_The_Square::exhaustive::decompose</text></g><g><title>Squaring-The-Square`hashbrown::map::HashMap&lt;K,V,S,A&gt;::contains_key (2 samples, 0.02%)</title><rect x="99.9798%" y="293" width="0.0202%" height="15" fill="rgb(242,119,39)" fg:x="9890" fg:w="2"/><text x="100.2298%" y="303.50"></text></g></svg></svg>